# Rutas para seguimiento_postoperatorio
location /api {
    access_log /var/log/nginx/api_postcare.log main;
    auth_request /_validate_apikey;

    proxy_pass http://seguimiento_postoperatorio; 
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    return 404; # Catch-all
}

location /test {
    proxy_pass http://seguimiento_postoperatorio/api/pacientes/test;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    return 404; # Catch-all
}

location /api-docs {
    proxy_pass http://seguimiento_postoperatorio/api-docs;
    proxy_set_header Host $host;

    return 404; # Catch-all
}

# Rutas para registro_usuario
location /auth/users {
    access_log /var/log/nginx/api_postcare.log main;
    auth_request /_validate_apikey;

    proxy_pass http://registro_usuario; # Usa el upstream para redirigir las solicitudes
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    return 404; # Catch-all
}

location /auth/jwt {
    access_log /var/log/nginx/api_postcare.log main;
    auth_request /_validate_apikey;

    proxy_pass http://registro_usuario; # Usa el upstream para redirigir las solicitudes
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    return 404; # Catch-all
}
location /auth-docs {
    proxy_pass http://registro_usuario/api-docs; 
    proxy_set_header Host $host;

    return 404; # Catch-all
}

# Rutas desde el frontend
# location / {
#     access_log /var/log/nginx/api_postcare.log main;
#     auth_request /_validate_apikey;

#     proxy_pass http://postcare_fe; # Usa el upstream para redirigir las solicitudes
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#     return 404; # Catch-all
# }